name: Update tower count

on:
  workflow_dispatch: {}  # enables manual trigger
  schedule:
    - cron: '0 2 * * 0'   # runs every Sunday at 2 UTC

permissions:
  contents: write

jobs:
  fetch-towers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: run-query
        name: Run Overpass count query
        run: |
          cat << 'EOF' > query.overpassql
          [out:json][timeout:400];
          (
            node["power"="tower"](user:"Andreas Hernandez");
            node["power"="tower"](user:"Tobias Augspurger");
            node["power"="tower"](user:"Mwiche");
            node["power"="tower"](user:"davidtt92");
            node["power"="tower"](user:"relaxxe");
            node["power"="tower"](user:"Russ")(newer:"2025-03-01T00:00:00Z");
            node["power"="tower"](user:"map-dynartio")(newer:"2025-03-01T00:00:00Z");
            node["power"="tower"](user:"overflorian")(newer:"2025-03-01T00:00:00Z");
            node["power"="tower"](user:"nlehuby")(newer:"2025-03-01T00:00:00Z");
            node["power"="tower"](user:"ben10dynartio")(newer:"2025-03-01T00:00:00Z");
            node["power"="tower"](user:"InfosReseaux")(newer:"2025-03-01T00:00:00Z");
          );
          out count;
          EOF

          COUNT=$(curl -s --data-urlencode "data@query.overpassql" \
            https://overpass-api.de/api/interpreter \
            | jq -r '.elements[0].count // .elements[0].tags.total // 0')

          echo "count=$COUNT" >> $GITHUB_OUTPUT

          mkdir -p docs/data
          cat << JSON > docs/data/tower-count.json
          {
            "towerCount": $COUNT,
            "updated": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
          }
          JSON

      - id: run-line-query
        name: Run Overpass length query
        run: |
          cat << 'EOF' > query-lines.overpassql
          [out:json][timeout:900];

          node["power"="tower"](user_touched:"Andreas Hernandez", "Tobias Augspurger", "Mwiche", "davidtt92", "relaxxe")-> .my_nodes;

                  
          node["power"="tower"](user_touched: "Russ","map-dynartio","overflorian","nlehuby","ben10dynartio","InfosReseaux")(newer:"2025-03-01T00:00:00Z")->.their_towers;
            

            way["power"="line"](bn.my_nodes)-> .connected_ways;
            way["power"="line"](bn.their_towers)-> .theirconnected_ways;
            (
              .my_nodes;
              .connected_ways;
              .theirconnected_ways;
              .their_towers;
                );

              out body;
              >;
              out skel qt;
          EOF

          # fetch full geometry
          curl -s --data-urlencode "data@query-lines.overpassql" \
            https://overpass-api.de/api/interpreter \
            -o lines.json

          # compute total km using a small Python snippet
          python3 - << 'PYCODE'
          import json, math

          def haversine(a,b):
          R=6371.0
          lat1,lon1=a; lat2,lon2=b
          dlat,dlon=math.radians(lat2-lat1), math.radians(lon2-lon1)
          sa,ca=math.sin(dlat/2), math.cos(math.radians(lat1))*math.cos(math.radians(lat2))*math.sin(dlon/2)
          c=2*math.atan2(math.sqrt(sa*sa+ca), math.sqrt(1-sa*sa-ca))
          return R*c

          data=json.load(open('lines.json'))
          total=0.0
          for el in data['elements']:
           if el['type']=='way' and 'geometry' in el:
            coords=[(n['lat'],n['lon']) for n in el['geometry']]
            seg=sum(haversine(coords[i],coords[i+1]) for i in range(len(coords)-1))
            total += seg

          out = {
           "lengthKm": round(total,2),
           "updated": "$(date --utc +%Y-%m-%dT%H:%M:%SZ)"
          }
          print(json.dumps(out))
          PYCODE
              mkdir -p docs/data
              python3 - << 'SAVE'
          import sys, json
          txt=sys.stdin.read()
          data=json.loads(txt)
          with open('docs/data/line-length.json','w') as f:
           json.dump(data, f)
          SAVE

      - name: Commit & push if changed (include line length)
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          message: |
            chore: weekly stats
            - towers ${{ steps.run-query.outputs.count }}
            - lines ${{ steps.run-line-query.outputs.lengthKm }} km
          add: |
            docs/data/tower-count.json
            docs/data/line-length.json
